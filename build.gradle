group = "BumboEditoni"
version = "indev"

buildscript {
    ext.kotlin_version = "1.4.10"
    ext.lwjgl_version = "3.2.3"
    repositories {
        mavenCentral()
        maven { url "http://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "https://jitpack.io/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    }
}

ext.isGroup = new File(projectDir, ".group").exists()
group = rootProject.group
version = rootProject.version

//do not configure groups
if (ext.isGroup) return

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/kotlin/kotlin-eap" }
    maven { url "https://jitpack.io/" }
    jcenter()
}

apply plugin: "kotlin"
apply plugin: "application"

dependencies {
    compile "com.github.orange451:LWJGUI:923a57a13d"
	compile "com.github.Querz:NBT:5.5"

    compile "com.alibaba:fastjson:1.2.73"
    compile "com.github.Querz:NBT:5.2"

    compile "org.lwjgl:lwjgl:$lwjgl_version"
    compile "org.lwjgl:lwjgl-glfw:$lwjgl_version"
    compile "org.lwjgl:lwjgl-opengl:$lwjgl_version"
    compile "org.lwjgl:lwjgl-stb:$lwjgl_version"
    compile "org.lwjgl:lwjgl-nanovg:$lwjgl_version"
    compile "org.lwjgl:lwjgl-jemalloc:$lwjgl_version"
    compile "org.lwjgl:lwjgl-tinyfd:$lwjgl_version"
    compile "org.lwjgl:lwjgl:$lwjgl_version:natives-windows"
    compile "org.lwjgl:lwjgl-opengl:$lwjgl_version:natives-windows"
    compile "org.lwjgl:lwjgl-glfw:$lwjgl_version:natives-windows"
    compile "org.lwjgl:lwjgl-stb:$lwjgl_version:natives-windows"
    compile "org.lwjgl:lwjgl-nanovg:$lwjgl_version:natives-windows"

    compile "org.apache.logging.log4j:log4j-api:2.12.0"
    compile "org.apache.logging.log4j:log4j-core:2.12.0"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

for (def task in tasks.withType(JavaCompile))
{
    task.sourceCompatibility = "1.8"
    task.targetCompatibility = "1.8"
    task.options.encoding = "UTF-8"
}

afterEvaluate {
    jar.from(configurations.compile.collect { zipTree(it) })
}

jar {
    manifest {
        attributes "Main-Class": "me.danetnaverno.editoni.Main"
    }
}

compileKotlin {
    kotlinOptions {
        //Because this is a pure Kotlin project, we can remove Kotlin's intrinsics assertions
        //Actually, maybe it'd be better to keep it during the development stage,
        //  but for the sake of optimization testing, I keep them removed
        freeCompilerArgs = ["-Xinline-classes", "-Xno-param-assertions", "-Xno-call-assertions", "-Xno-receiver-assertions"]
    }
}